import { PayloadAction, createSlice } from '@reduxjs/toolkit'
import { Centers, Colors, GateState, IGate } from 'models/types'

const initialState: GateState = {
  list: [
    {
      left: -49,
      top: 74,
      value: 64,
      pairGate: 47,
      x: 0,
      y: 0,
      center: Centers.HEAD,
      isOpen: false,
      color: Colors.GRAY,
    },
    {
      left: -8,
      top: 74,
      value: 61,
      pairGate: 24,
      x: 0,
      y: 0,
      center: Centers.HEAD,
      isOpen: false,
      color: Colors.GRAY,
    },
    {
      left: 33,
      top: 74,
      value: 63,
      pairGate: 4,
      x: 0,
      y: 0,
      center: Centers.HEAD,
      isOpen: false,
      color: Colors.GRAY,
    },
    {
      left: -8,
      top: -90,
      value: 24,
      pairGate: 61,
      x: 0,
      y: 0,
      center: Centers.AJNA,
      isOpen: false,
      color: Colors.GRAY,
    },
    {
      left: -49,
      top: -90,
      value: 47,
      pairGate: 64,
      x: 0,
      y: 0,
      center: Centers.AJNA,
      isOpen: false,
      color: Colors.GRAY,
    },
    {
      left: 33,
      top: -90,
      value: 4,
      pairGate: 63,
      x: 0,
      y: 0,
      center: Centers.AJNA,
      isOpen: false,
      color: Colors.GRAY,
    },
    {
      left: 9,
      top: -53,
      value: 11,
      pairGate: 56,
      x: 0,
      y: 0,
      center: Centers.AJNA,
      isOpen: false,
      color: Colors.GRAY,
    },
    {
      left: -25,
      top: -53,
      value: 17,
      pairGate: 62,
      x: 0,
      y: 0,
      center: Centers.AJNA,
      isOpen: false,
      color: Colors.GRAY,
    },
    {
      left: -8,
      top: -28,
      value: 43,
      pairGate: 23,
      x: 0,
      y: 0,
      center: Centers.AJNA,
      isOpen: false,
      color: Colors.GRAY,
    },
    {
      left: 30,
      top: 0,
      value: 62,
      pairGate: 17,
      x: 0,
      y: 0,
      center: Centers.THROAT,
      isOpen: false,
      color: Colors.GRAY,
    },
    {
      left: 46,
      top: 0,
      value: 23,
      pairGate: 43,
      x: 0,
      y: 0,
      center: Centers.THROAT,
      isOpen: false,
      color: Colors.GRAY,
    },
    {
      left: 62,
      top: 0,
      value: 56,
      pairGate: 11,
      x: 0,
      y: 0,
      center: Centers.THROAT,
      isOpen: false,
      color: Colors.GRAY,
    },
    {
      left: 94,
      top: 30,
      value: 35,
      pairGate: 36,
      x: 0,
      y: 0,
      center: Centers.THROAT,
      isOpen: false,
      color: Colors.GRAY,
    },
    {
      left: 94,
      top: 46,
      value: 12,
      pairGate: 22,
      x: 0,
      y: 0,
      center: Centers.THROAT,
      isOpen: false,
      color: Colors.GRAY,
    },
    {
      left: 94,
      top: 62,
      value: 45,
      pairGate:21,
      x: 0,
      y: 0,
      center: Centers.THROAT,
      isOpen: false,
      color: Colors.GRAY,
    },
    {
      left: 74,
      top: 94,
      value: 33,
      pairGate:13,
      x: 0,
      y: 0,
      center: Centers.THROAT,
      isOpen: false,
      color: Colors.GRAY,
    },
    {
      left: 46,
      top: 94,
      value: 8,
      pairGate:1,
      x: 0,
      y: 0,
      center: Centers.THROAT,
      isOpen: false,
      color: Colors.GRAY,
    },
    {
      left: 18,
      top: 94,
      value: 31,
      pairGate:7,
      x: 0,
      y: 0,
      center: Centers.THROAT,
      isOpen: false,
      color: Colors.GRAY,
    },
    {
      left: 0,
      top: 62,
      value: 20,
      pairGate:57,
      x: 0,
      y: 0,
      center: Centers.THROAT,
      isOpen: false,
      color: Colors.GRAY,
    },
    {
      left: 0,
      top: 30,
      value: 16,
      pairGate:48,
      x: 0,
      y: 0,
      center: Centers.THROAT,
      isOpen: false,
      color: Colors.GRAY,
    },
    {
      left: 8,
      top: -30,
      value: 1,
      pairGate:8,
      x: 0,
      y: 0,
      center: Centers.G,
      isOpen: false,
      color: Colors.GRAY,
    },
    {
      left: 38,
      top: 0,
      value: 13,
      pairGate:33,
      x: 0,
      y: 0,
      center: Centers.G,
      isOpen: false,
      color: Colors.GRAY,
    },
    {
      left: 69,
      top: 31,
      value: 25,
      pairGate:51,
      x: 0,
      y: 0,
      center: Centers.G,
      isOpen: false,
      color: Colors.GRAY,
    },
    {
      left: -22,
      top: 63,
      value: 15,
      pairGate:5,
      x: 0,
      y: 0,
      center: Centers.G,
      isOpen: false,
      color: Colors.GRAY,
    },
    {
      left: 8,
      top: 83,
      value: 2,
      pairGate:14,
      x: 0,
      y: 0,
      center: Centers.G,
      isOpen: false,
      color: Colors.GRAY,
    },
    {
      left: 38,
      top: 63,
      value: 46,
      pairGate:29,
      x: 0,
      y: 0,
      center: Centers.G,
      isOpen: false,
      color: Colors.GRAY,
    },
    {
      left: -53,
      top: 31,
      value: 10,
      pairGate:null,
      x: 0,
      y: 0,
      center: Centers.G,
      isOpen: false,
      color: Colors.GRAY,
    },
    {
      left: -22,
      top: 0,
      value: 7,
      pairGate:31,
      x: 0,
      y: 0,
      center: Centers.G,
      isOpen: false,
      color: Colors.GRAY,
    },
    {
      left: 18,
      top: 0,
      value: 5,
      pairGate:15,
      x: 0,
      y: 0,
      center: Centers.SACRAL,
      isOpen: false,
      color: Colors.GRAY,
    },
    {
      left: 46,
      top: 0,
      value: 14,
      pairGate:2,
      x: 0,
      y: 0,
      center: Centers.SACRAL,
      isOpen: false,
      color: Colors.GRAY,
    },
    {
      left: 74,
      top: 0,
      value: 29,
      pairGate:46,
      x: 0,
      y: 0,
      center: Centers.SACRAL,
      isOpen: false,
      color: Colors.GRAY,
    },
    {
      left: 94,
      top: 78,
      value: 59,
      pairGate:6,
      x: 0,
      y: 0,
      center: Centers.SACRAL,
      isOpen: false,
      color: Colors.GRAY,
    },
    {
      left: 62,
      top: 94,
      value: 9,
      pairGate:52,
      x: 0,
      y: 0,
      center: Centers.SACRAL,
      isOpen: false,
      color: Colors.GRAY,
    },
    {
      left: 46,
      top: 94,
      value: 3,
      pairGate:60,
      x: 0,
      y: 0,
      center: Centers.SACRAL,
      isOpen: false,
      color: Colors.GRAY,
    },
    {
      left: 30,
      top: 94,
      value: 42,
      pairGate:53,
      x: 0,
      y: 0,
      center: Centers.SACRAL,
      isOpen: false,
      color: Colors.GRAY,
    },
    {
      left: 0,
      top: 78,
      value: 27,
      pairGate:50,
      x: 0,
      y: 0,
      center: Centers.SACRAL,
      isOpen: false,
      color: Colors.GRAY,
    },
    {
      left: 0,
      top: 16,
      value: 34,
      pairGate:null,
      x: 0,
      y: 0,
      center: Centers.SACRAL,
      isOpen: false,
      color: Colors.GRAY,
    },
    {
      left: 30,
      top: 0,
      value: 53,
      pairGate:42,
      x: 0,
      y: 0,
      center: Centers.ROOT,
      isOpen: false,
      color: Colors.GRAY,
    },
    {
      left: 46,
      top: 0,
      value: 60,
      pairGate:3,
      x: 0,
      y: 0,
      center: Centers.ROOT,
      isOpen: false,
      color: Colors.GRAY,
    },
    {
      left: 62,
      top: 0,
      value: 52,
      pairGate:9,
      x: 0,
      y: 0,
      center: Centers.ROOT,
      isOpen: false,
      color: Colors.GRAY,
    },
    {
      left: 94,
      top: 30,
      value: 19,
      pairGate:49,
      x: 0,
      y: 0,
      center: Centers.ROOT,
      isOpen: false,
      color: Colors.GRAY,
    },
    {
      left: 94,
      top: 46,
      value: 39,
      pairGate:55,
      x: 0,
      y: 0,
      center: Centers.ROOT,
      isOpen: false,
      color: Colors.GRAY,
    },
    {
      left: 94,
      top: 62,
      value: 41,
      pairGate:30,
      x: 0,
      y: 0,
      center: Centers.ROOT,
      isOpen: false,
      color: Colors.GRAY,
    },
    {
      left: 0,
      top: 30,
      value: 54,
      pairGate:32,
      x: 0,
      y: 0,
      center: Centers.ROOT,
      isOpen: false,
      color: Colors.GRAY,
    },
    {
      left: 0,
      top: 46,
      value: 38,
      pairGate:28,
      x: 0,
      y: 0,
      center: Centers.ROOT,
      isOpen: false,
      color: Colors.GRAY,
    },
    {
      left: 0,
      top: 62,
      value: 58,
      pairGate:18,
      x: 0,
      y: 0,
      center: Centers.ROOT,
      isOpen: false,
      color: Colors.GRAY,
    },
    {
      left: -100,
      top: -58,
      value: 48,
      pairGate:16,
      x: 0,
      y: 0,
      center: Centers.SPLEEN,
      isOpen: false,
      color: Colors.GRAY,
    },
    {
      left: -76,
      top: -42,
      value: 57,
      pairGate:20,
      x: 0,
      y: 0,
      center: Centers.SPLEEN,
      isOpen: false,
      color: Colors.GRAY,
    },
    {
      left: -54,
      top: -26,
      value: 44,
      pairGate:26,
      x: 0,
      y: 0,
      center: Centers.SPLEEN,
      isOpen: false,
      color: Colors.GRAY,
    },
    {
      left: -28,
      top: -8,
      value: 50,
      pairGate:27,
      x: 0,
      y: 0,
      center: Centers.SPLEEN,
      isOpen: false,
      color: Colors.GRAY,
    },
    {
      left: -54,
      top: 10,
      value: 32,
      pairGate:54,
      x: 0,
      y: 0,
      center: Centers.SPLEEN,
      isOpen: false,
      color: Colors.GRAY,
    },
    {
      left: -76,
      top: 26,
      value: 28,
      pairGate:38,
      x: 0,
      y: 0,
      center: Centers.SPLEEN,
      isOpen: false,
      color: Colors.GRAY,
    },
    {
      left: -100,
      top: 42,
      value: 18,
      pairGate:58,
      x: 0,
      y: 0,
      center: Centers.SPLEEN,
      isOpen: false,
      color: Colors.GRAY,
    },
    {
      left: 84,
      top: -58,
      value: 36,
      pairGate:35,
      x: 0,
      y: 0,
      center: Centers.SOLAR,
      isOpen: false,
      color: Colors.GRAY,
    },
    {
      left: 60,
      top: -42,
      value: 22,
      pairGate:12,
      x: 0,
      y: 0,
      center: Centers.SOLAR,
      isOpen: false,
      color: Colors.GRAY,
    },
    {
      left: 37,
      top: -26,
      value: 37,
      pairGate:40,
      x: 0,
      y: 0,
      center: Centers.SOLAR,
      isOpen: false,
      color: Colors.GRAY,
    },
    {
      left: 12,
      top: -8,
      value: 6,
      pairGate:59,
      x: 0,
      y: 0,
      center: Centers.SOLAR,
      isOpen: false,
      color: Colors.GRAY,
    },
    {
      left: 37,
      top: 10,
      value: 49,
      pairGate:19,
      x: 0,
      y: 0,
      center: Centers.SOLAR,
      isOpen: false,
      color: Colors.GRAY,
    },
    {
      left: 60,
      top: 26,
      value: 55,
      pairGate:39,
      x: 0,
      y: 0,
      center: Centers.SOLAR,
      isOpen: false,
      color: Colors.GRAY,
    },
    {
      left: 84,
      top: 42,
      value: 30,
      pairGate:41,
      x: 0,
      y: 0,
      center: Centers.SOLAR,
      isOpen: false,
      color: Colors.GRAY,
    },
    {
      left: -54,
      top: 54,
      value: 26,
      pairGate:44,
      x: 0,
      y: 0,
      center: Centers.HEART,
      isOpen: false,
      color: Colors.GRAY,
    },
    {
      left: -32,
      top: 32,
      value: 51,
      pairGate:25,
      x: 0,
      y: 0,
      center: Centers.HEART,
      isOpen: false,
      color: Colors.GRAY,
    },
    {
      left: -11,
      top: 11,
      value: 21,
      pairGate:45,
      x: 0,
      y: 0,
      center: Centers.HEART,
      isOpen: false,
      color: Colors.GRAY,
    },
    {
      left: 24,
      top: 74,
      value: 40,
      pairGate:37,
      x: 0,
      y: 0,
      center: Centers.HEART,
      isOpen: false,
      color: Colors.GRAY,
    },
  ],
}

export const gateSlice = createSlice({
  name: 'gates',
  initialState,
  reducers: {
    setСoordinates(state = initialState, action: PayloadAction<IGate>) {
      state.list.map((gate) => {
        if (gate.value === action.payload.value) {
          gate.x = action.payload.x
          gate.y = action.payload.y
        }
      })
    },
    openRandomGate(state = initialState) {
      state.list.map((gate) =>
        Math.random() < 0.5
          ? ((gate.isOpen = false), (gate.color = Colors.GRAY))
          : ((gate.isOpen = true), (gate.color = Colors.WHITE))
      )
    },
  },
})

export default gateSlice.reducer
export const { setСoordinates, openRandomGate } = gateSlice.actions
